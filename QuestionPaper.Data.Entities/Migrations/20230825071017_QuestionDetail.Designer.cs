// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionPaper.Data.Entities.DataContext;

#nullable disable

namespace QuestionPaper.Data.Entities.Migrations
{
    [DbContext(typeof(QuestionDbcontext))]
    [Migration("20230825071017_QuestionDetail")]
    partial class QuestionDetail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuestionPaper.Data.Entities.Model.questionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("questionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("questionDetails");
                });

            modelBuilder.Entity("QuestionPaper.Data.Entities.Model.subQuestions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("numberOfQuestion")
                        .HasColumnType("int");

                    b.Property<int>("questionDetails_id")
                        .HasColumnType("int");

                    b.Property<string>("subQuestionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("timeLimit")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("questionDetails_id");

                    b.ToTable("subQuestions");
                });

            modelBuilder.Entity("QuestionPaper.Data.Entities.Model.subQuestions", b =>
                {
                    b.HasOne("QuestionPaper.Data.Entities.Model.questionDetails", "questionDetails")
                        .WithMany("subQuestions")
                        .HasForeignKey("questionDetails_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("questionDetails");
                });

            modelBuilder.Entity("QuestionPaper.Data.Entities.Model.questionDetails", b =>
                {
                    b.Navigation("subQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
